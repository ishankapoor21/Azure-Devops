trigger:
- none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: pn
    type: string
    displayName: "project name"
    values:
      - CLIENT1
      - CLIENT2
      - CLIENT3

  - name: env
    type: string
    displayName: "environment name"
    values:
      - prod
      - dev
      - uat
  

variables:
  Project_Name: ${{parameters.pn}}
  Env_Name: ${{parameters.env}}

 
steps:

- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: 'Storage_Account'
    commandOptions: '-var "Project_Name=$(Project_Name)" -var "Env_Name=$(Env_Name)"'
    backendServiceArm: 'SERVICE_CONNECTION_NAME'
    backendAzureRmResourceGroupName: 'RESOURCE_GROUP_NAME'
    backendAzureRmStorageAccountName: 'STORAGE_ACCOUNT_NAME'
    backendAzureRmContainerName: 'CONTAINER_NAME'
    backendAzureRmKey: 'TERRAFORM_STATEFILE_NAME'
    
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: 'Storage_Account'
    commandOptions: '-var "Project_Name=$(Project_Name)" -var "Env_Name=$(Env_Name)"'
    environmentServiceNameAzureRM: 'SERVICE_CONNECTION_NAME'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: 'Storage_Account'
    commandOptions: '-var "Project_Name=$(Project_Name)" -var "Env_Name=$(Env_Name)"'
    environmentServiceNameAzureRM: 'SERVICE_CONNECTION_NAME'

